<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FilterAll" xml:space="preserve">
    <value>すべてのファイル</value>
  </data>
  <data name="FilterPdf" xml:space="preserve">
    <value>PDF ファイル</value>
  </data>
  <data name="MenuClose" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="MenuEdit" xml:space="preserve">
    <value>編集</value>
  </data>
  <data name="MenuEncryption" xml:space="preserve">
    <value>セキュリティ</value>
  </data>
  <data name="MenuExit" xml:space="preserve">
    <value>終了</value>
  </data>
  <data name="MenuExtract" xml:space="preserve">
    <value>抽出</value>
  </data>
  <data name="MenuExtractOthers" xml:space="preserve">
    <value>詳細を設定して抽出</value>
  </data>
  <data name="MenuFile" xml:space="preserve">
    <value>ファイル</value>
  </data>
  <data name="MenuInsert" xml:space="preserve">
    <value>挿入</value>
  </data>
  <data name="MenuInsertBack" xml:space="preserve">
    <value>末尾に挿入</value>
  </data>
  <data name="MenuInsertOthers" xml:space="preserve">
    <value>詳細を設定して挿入</value>
  </data>
  <data name="MenuInsertFront" xml:space="preserve">
    <value>先頭に挿入</value>
  </data>
  <data name="MenuMetadata" xml:space="preserve">
    <value>文書プロパティ</value>
  </data>
  <data name="MenuMoveNext" xml:space="preserve">
    <value>後へ</value>
  </data>
  <data name="MenuMovePrevious" xml:space="preserve">
    <value>前へ</value>
  </data>
  <data name="MenuOpen" xml:space="preserve">
    <value>開く</value>
  </data>
  <data name="MenuOthers" xml:space="preserve">
    <value>その他</value>
  </data>
  <data name="MenuRecent" xml:space="preserve">
    <value>最近開いたファイル</value>
  </data>
  <data name="MenuRedo" xml:space="preserve">
    <value>やり直し</value>
  </data>
  <data name="MenuRefresh" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="MenuRemove" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="MenuRemoveRange" xml:space="preserve">
    <value>範囲を指定して削除</value>
  </data>
  <data name="MenuRotateLeft" xml:space="preserve">
    <value>左90度</value>
  </data>
  <data name="MenuRotateRight" xml:space="preserve">
    <value>右90度</value>
  </data>
  <data name="MenuSave" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="MenuSaveAs" xml:space="preserve">
    <value>名前を付けて保存</value>
  </data>
  <data name="MenuSelect" xml:space="preserve">
    <value>選択</value>
  </data>
  <data name="MenuSelectAll" xml:space="preserve">
    <value>すべて選択</value>
  </data>
  <data name="MenuSelectClear" xml:space="preserve">
    <value>選択を解除</value>
  </data>
  <data name="MenuSelectFlip" xml:space="preserve">
    <value>選択の切り替え</value>
  </data>
  <data name="MenuSettings" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="MenuUndo" xml:space="preserve">
    <value>元に戻す</value>
  </data>
  <data name="MenuView" xml:space="preserve">
    <value>表示</value>
  </data>
  <data name="MenuWeb" xml:space="preserve">
    <value>Web</value>
  </data>
  <data name="MenuZoomIn" xml:space="preserve">
    <value>拡大</value>
  </data>
  <data name="MenuZoomOut" xml:space="preserve">
    <value>縮小</value>
  </data>
  <data name="MessageLoading" xml:space="preserve">
    <value>{0} を開いています ...</value>
  </data>
  <data name="MessagePage" xml:space="preserve">
    <value>全 {0} ページ</value>
  </data>
  <data name="MessageSelection" xml:space="preserve">
    <value>{0} 個の項目を選択</value>
  </data>
  <data name="TitleOpen" xml:space="preserve">
    <value>ファイルを開く</value>
  </data>
  <data name="TooltipExtract" xml:space="preserve">
    <value>選択ページを抽出</value>
  </data>
  <data name="TooltipInsert" xml:space="preserve">
    <value>選択位置の後に挿入</value>
  </data>
  <data name="TooltipRemove" xml:space="preserve">
    <value>選択ページを削除</value>
  </data>
  <data name="TooltipSave" xml:space="preserve">
    <value>上書き保存</value>
  </data>
  <data name="VersionSuffix" xml:space="preserve">
    <value>β</value>
  </data>
</root>